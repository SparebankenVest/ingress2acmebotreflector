name: build

on:
  pull_request:
    branches:
      - "main"

permissions:
  contents: write         # This is required for actions/checkout@v3
  pull-requests: write    # This is required for commenting on PR

jobs:
  build:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: |
          echo "TIMESTAMP=$(git show -s --format=%ct $GITHUB_SHA)" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/SparebankenVest
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=raw,value=branch-{{branch}}-{{sha}}-{{date 'X'}},enable=${{ github.event_name != 'pull_request'}}
            type=raw,value=branch-{{branch}},enable=${{ github.event_name != 'pull_request'}}
            type=sha,format=long,prefix=ci-,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=raw,value={{sha}}-${{ env.TIMESTAMP }},enable={{is_default_branch}}


      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/SparebankenVest
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Use the automatically generated GITHUB_TOKEN

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and conditionally push
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: .
          build-args: |
            COMMIT_HASH=${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./Dockerfile

      - name: Output summary
        run: |
          echo '# Docker Metadata 🐳' >> $GITHUB_STEP_SUMMARY
          echo '## Tags' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' >> $GITHUB_STEP_SUMMARY
          echo '## Labels' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.labels }}' >> $GITHUB_STEP_SUMMARY